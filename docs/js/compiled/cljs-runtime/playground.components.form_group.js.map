{"version":3,"sources":["playground/components/form_group.cljs"],"mappings":";;AAQA,AAAKA,2CACH,AAACC,8DACA,WAAKC;AAAL,AAAA,0FAAA,sDACU,qDAAA,rDAACC,+CAAOD;;AAErB,8CAAA,sDAAAE,pGAAMK;AAAN,AAAA,IAAAJ,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;SAAA,AAAAE,4CAAAF,eAAA,hEACWK;YADX,AAAAH,4CAAAF,eAAA,nEACcM;WADd,AAAAJ,4CAAAF,eAAA,lEACoBO;aADpB,AAAAL,4CAAAF,eAAA,pEACyBQ;kBADzB,AAAAN,4CAAAF,eAAA,zEACiCS;uBADjC,AAAAP,4CAAAF,eAAA,9EACmCU;uBADnC,AAAAR,4CAAAF,eAAA,9EAC8CW;kBAD9C,AAAAT,4CAAAF,eAAA,zEACyDY;AADzD,AAAA,0FAAA,wGAAA,2CAAA,iEAAA,aAAA,mFAAA,iGAAA,2CAAA,gEAAA,KAAA,0DAAA,OAAA,wEAAA,iBAAA,mFAAA,iGAAA,2CAAA,oDAAA,KAAA,iDAAA,2CAAA,4EAAA,iBAAA,gEAAA,sBAAA,+DAAA,mEAAA,MAAA,+DAAA,aAAA,mFAAA,oDAAA,mFAAA,iGAAA,2CAAA,oDAAA,aAAA,mFAAA,kGAAA,wCAAA,iEAAA,2DAAA,sDAAA,qDAAA,gEAAA,oDAAA,yEAAA,+DAAA,sEAAA,KAAA,7hFAEMC,oTACCC,8bAGCA,ieAGgBT,yRAGfC,wIACCQ,gSACCC,opBAEc,kBAAIL,kBAAW,CAACL,mCAAAA,2CAAAA,VAAGG,uBAAAA,SAAQ,iBAAAQ,WAAA,AAAAC,gBAAKT;AAAL,AAAA,4EAAAQ,yBAAAA,7FAACX,mCAAAA,6CAAAA;WAhBrD,2FAAA,WAAAF,pDAekCR,vDAEVY,UAIA,oCAAA,IAAA,tBAAII;AArB5B,AAkB8B,OAACO,mDAAMV,OAAOW,gBAAMd,GAAG,AAAA,AAAAF;GAItBS","names":["playground.components.form-group/r-input","reagent.core.reactify_component","props","cljs.core.dissoc","p__47714","map__47715","cljs.core/--destructure-map","cljs.core.get","p1__47713#","playground.components.form-group/form-group","id","label","type","values","&","not-deref?","text-area?","on-key-down","js/module$node_modules$$mui$material$node$index.FormControl","js/module$node_modules$$mui$material$node$index.Grid","js/module$node_modules$$mui$material$node$index.Input","G__47718","cljs.core/deref","cljs.core.swap_BANG_","cljs.core/assoc"],"sourcesContent":["(ns playground.components.form-group\n  (:require\n   [\"@mui/material\" :refer [FormControl Grid Input Typography]]\n   [clojure.string :as str]\n   [playground.utilites :as util]\n   [re-frame.core :as rf]\n   [reagent.core :as r]))\n\n(def r-input\n  (r/reactify-component\n   (fn [props]\n     [:input (dissoc props :ref)])))\n\n(defn form-group\n  [{:keys [id label type values  & not-deref? text-area? on-key-down]}]\n  [:> FormControl {:full-width true}\n   [:> Grid {:container true\n             :display \"flex\"\n             :flex-direction \"column\"}\n    [:> Grid {:item true\n              :sx {:justify-content \"center\"}\n              :class-name \"pl-1 text-slate-700\"\n              :html-for id\n              :font-weight 500\n              :component \"h4\"}\n     [:p label\n      [:> Grid {:item true}\n       [:> Input {:variant \"outlined\"\n                  :inputComponent r-input\n                  :value (if not-deref? (id values) (id @values))\n                  :type type\n                  :on-change #(swap! values assoc id (.. % -target -value))\n                  :full-width true\n                  :multiline true\n                  :rows (if text-area? 4 1)\n                  :on-key-down on-key-down}]]]]]])\n                  ;; :on-key-up (when-not (str/blank? (id @values)) validate)}]]]]]])\n                  ;; :on-blur validate\n                  ;; :error error}]]]]]])\n\n       ;; (when error\n       ;;   [:> Typography {:variant \"caption\"\n       ;;                   :color (util/color [:red :600])\n       ;;                   :sx {:mt 1}}])]]]]])\n          ;; [:p input-error]])]]]]])\n"]}