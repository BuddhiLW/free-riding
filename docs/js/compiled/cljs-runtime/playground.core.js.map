{"version":3,"sources":["playground/core.cljs"],"mappings":";;AAaA,wBAAA,xBAAMA;AAAN,AAAA,0FAAA,gGAAA,2CAAA,8DAAA,WAAA,sEAAA,OAAA,iDAAA,YAAA,mFAAA,gGAAA,2CAAA,iDAAA,2CAAA,uDAAA,SAAA,yDAAA,KAAA,0DAAA,OAAA,mEAAA,SAAA,4EAAA,SAAA,siBAAA,yDAAA,IAAA,sEAAA,YAAA,kDAAA,eAAA,mFAAA,uGAAA,2CAAA,2DAAA,aAAA,5+DAEMC,ibAICA,mlBAKmB,qSAAA,mFAAA,yDAAA,jbAACC,+CAAO,gKAAA,2EAAA,3OAACC,0DAAQC,otBAInCC;;AAIR,mCAAA,nCAAMC;AAAN,AAEE,UAAA,AAAAC,NAAMC,sBAAK,sDAAA,mFAAA,zIAACC;qBAAZ,2CAAA,5DACMC,8GAAqBF;IACrBG,SAAO,AAACC,gDAAOF;AAFrB,AAGE;AAAA,AACE,WAAA,AAAAH,PAAMM,uBAAM,sDAAA,mFAAA,zIAACJ;AAAb,AAAA,0FAAA,iDAAA,mFAAA,uGAAA,2CAAA,2DAAA,KAAA,uDAAA,SAAA,kDAAA,YAAA,6BAAA,mFAAA,iGAAA,2CAAA,gEAAA,KAAA,iDAAA,2CAAA,uDAAA,OAAA,yDAAA,OAAA,iDAAA,sBAAA,+HAAA,2CAAA,kDAAA,kDAAA,uDAAA,eAAA,qDAAA,OAAA,+EAAA,mFAAA,mGAAA,2CAAA,2DAAA,YAAA,uDAAA,UAAA,4DAAA,vwDAEOJ,gcAIAS,shBAKFC,qXAGoBJ,yJACjBK;AAfR,AAiB0B,8BAAA,mFAAA,4EAAA,AAAAT,tLAACU,sMAAiCN;WAjB5D,gCAAA,iHAAA,mFAAA,iGAAA,2CAAA,iDAAA,2CAAA,uDAAA,OAAA,yDAAA,OAAA,yDAAA,OAAA,iDAAA,MAAA,oEAAA,OAAA,sEAAA,aAAA,kEAAA,iBAAA,gEAAA,0CAAA,mFAAA,iGAAA,2CAAA,gEAAA,KAAA,+DAAA,SAAA,mEAAA,SAAA,4EAAA,SAAA,iDAAA,2CAAA,iDAAA,uBAAA,mFAAA,gGAAA,2CAAA,iDAAA,2CAAA,oEAAA,OAAA,iEAAA,4BAAA,mFAAA,/oEAoBIX,gKACGkB,24BASCJ,irBAKCb,seAGFY;;;AAEb,uBAAA,vBAAOM;AAAP,AAAA,0FAAA,mGAAA,mFAEIb;;AAIJ,kCAAA,lCAAMc;AAAN,AACE,2BAAA,pBAACC;;AAEH,6BAAA,7BAAMC,kEACHC,KAAKC;AADR,AAEE,AAACC,sCAA+BD;;AAChC,OAACE,iDAAYH,KAAKC;;AAEpB,6BAAA,7BAAuBG;AAAvB,AAEE,4BAAA,mFAAA,/GAACC;;AACD,IAAMC,UAAQ,AAACT;AAAf,AACE,kCAAA,3BAACE,8GAAYH,6BAAMU;;AAEvB,uBAAA,vBAAeC;AAAf,AAGE,OAACH","names":["playground.core/title","js/module$node_modules$$mui$material$node$index.Box","cljs.core.get_in","cljs.core.js__GT_clj","js/module$node_modules$$mui$material$node$index.colors","js/module$node_modules$$mui$material$node$index.Typography","playground.core/upload-file-page","cljs.core/deref","url","re_frame.core.subscribe","initial-values","values","reagent.core.atom","text","js/module$node_modules$$mui$material$node$index.Grid","playground.components.form-group/form-group","js/module$node_modules$$mui$material$node$index.Button","re-frame.core/dispatch","js/module$node_modules$$mui$material$node$index.Card","playground.core/main","playground.core/get-app-element","goog.dom/getElement","playground.core/mount-view","view","el","reagent.dom/unmount-component-at-node","reagent.dom.render","playground.core/inicialize","re-frame.core/dispatch-sync","root-el","playground.core/init"],"sourcesContent":["(ns playground.core\n  (:require\n   [\"@mui/material\" :refer [Box Card colors Grid\n                            Typography Button]]\n   [goog.dom :as gdom]\n   [playground.db]\n   [playground.events]\n   [playground.subs]\n   [re-frame.core :as rf]\n   [reagent.core :as r]\n   [reagent.dom :as rdom]\n   [playground.components.form-group :refer [form-group]]))\n\n(defn title\n  []\n  [:> Box {:position \"relative\"\n           :border-radius \"12px\"\n           ;; :width 400\n           :mb 3}\n   [:> Box {:sx {:width \"100 vw\"\n                 :height 50\n                 :display \"flex\"\n                 :align-items \"center\"\n                 :justify-content \"center\"\n                 :bgcolor (get-in (js->clj colors :keywordize-keys true) [:indigo :50])\n                 :border 1\n                 :border-radius 1}\n            :my \"auto\"}\n    [:> Typography\n     {:variant \"h5\"}\n     \"Read your article, with the power of Lynx!\"]]])\n\n(defn upload-file-page\n  []\n  (let [url @(rf/subscribe [:article/url])\n        initial-values {:url url}\n        values (r/atom initial-values)]\n    (fn []\n      (let [text @(rf/subscribe [:article/text])]\n        [:<>\n         [:> Typography {:variant \"h4\"\n                         :align \"center\"\n                         :my 2}\n          \"Free your pay-wall\"]\n         [:> Grid\n          {:container true\n           :sx {:width \"50vw\"\n                :margin \"auto\"\n                :mb \"2em\"}}\n          [form-group {:id :url\n                       :label \"Website url:\"\n                       :type \"text\"\n                       :values values}]\n          [:> Button {:variant \"contained\"\n                      :color \"primary\"\n                      :onClick #(rf/dispatch [:article/fetch-url @values])}\n           \"Fetch article\"]]\n\n         [title]\n         [:> Card {:sx {:width \"60vw\"\n                        :height \"60vh\"\n                        :margin \"auto\"\n                        :mb \"2em\"\n                        :inline-size \"50vw\"\n                        :overflow-wrap \"break-word\"\n                        :overflow-y \"scroll\"}\n                   :class-name \"overflow-hidden overflow-y-auto\"}\n\n          [:> Grid {:container true\n                    :direction \"column\"\n                    :align-items \"center\"\n                    :justify-content \"center\"\n                    :sx {:mb \"10em\"}}\n           [:> Box {:sx {:inline-size \"45vw\"\n                         :word-break \"break-all\"}}\n            [:pre\n             text]]]]]))))\n\n(defn- main []\n  [:main.container.mx-auto.pt-5\n   [upload-file-page]])\n\n;; -----------------------------------------------------------------------------\n\n(defn get-app-element []\n  (gdom/getElement \"app\"))\n\n(defn mount-view\n  [view el]\n  (rdom/unmount-component-at-node el)\n  (rdom/render view el))\n\n(defn ^:dev/after-load inicialize\n  []\n  (rf/dispatch-sync [:prod/inicialize-db])\n  (let [root-el (get-app-element)]\n    (mount-view [main] root-el)))\n\n(defn ^:export init\n  []\n  ;; (rf/clear-subscription-cache!)\n  (inicialize))\n\n;; (init)\n"]}