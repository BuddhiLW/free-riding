{"version":3,"sources":["playground/events.cljs"],"mappings":";AAOA,kCAAA,lCAAKA;AAEL,yDAAA,zDAACC,uIAIA,WAAKE,EAAEA;AAAP,AAAA,OAAAD,gBACGE;;AAGJ,yDAAA,zDAACC,qIAEA,WAAAC,SAAAC;AAAA,AAAA,IAAAC,aAAAF;IAAAE,iBAAA,AAAAC,4BAAAD;SAAA,AAAAE,4CAAAF,eAAA,hEAAaM;IAAbH,aAAAJ;QAAA,AAAAK,4CAAAD,WAAA,IAAA,/DAAmBR;IAAnBU,aAAA,AAAAD,4CAAAD,WAAA,IAAA;IAAAE,iBAAA,AAAAJ,4BAAAI;UAAA,AAAAH,4CAAAG,eAAA,jEAA6BE;AAA7B,AACE,YAAA,ZAACC,6BAAgC,iCAAA,hCAAKhB,4FAA8B,AAACiB,mBAAsBF;;AAD7F,kDAAA,kRAAA,iEAAA,2CAAA,uDAAA,mDAAA,mLAAA,2DAAA,OAAA,uPAAA,iEAAA,mFAAA,kFAAA,gEAAA,mFAAA,sFAAA,n3CAEO,sBAAA,mFAAA,0DAAA,nKAACG,mBAASJ,0MAAmBC,8QAEH,iCAAA,hCAAKf,4FAA8B,AAACiB,mBAAsBF,6JAE1D,CAACI,+DAAAA,iEAAAA;;AAInC,yDAAA,zDAAClB,mIAEA,cAAAmB,HAAKN;AAAL,AAAA,IAAAO,aAAAD;QAAA,AAAAR,4CAAAS,WAAA,IAAA,/DAASlB;eAAT,AAAAS,4CAAAS,WAAA,IAAA,tEAAWC;AAAX,AACE,YAAA,ZAACN,yBAA4BM;;AAC7B,6BAAA,mFAAA,0DAAA,nKAACJ,mBAASJ,8MAAoBQ;;AAEjC,yDAAA,zDAACrB,+IAEA,cAAAsB,HAAKT;AAAL,AAAA,IAAAU,aAAAD;QAAA,AAAAX,4CAAAY,WAAA,IAAA,/DAASrB;mBAAT,AAAAS,4CAAAY,WAAA,IAAA,1EAAWC;eAAX,AAAAb,4CAAAY,WAAA,IAAA,tEAAwBF;AAAxB,AACE,cAAA,uBAAA,rCAACI,wBAA2BD,kBAAkBH;;0BAC1CR,1BACA,6BAAA,mFAAA,zGAACI,kKAAkBO,qBAAc,qDAAA,rDAACf,4CAAIY;;AAE7C,4BAAA,5BAAMK,gEAASL;AAAf,AACE,OAAMM,YAAW,4CAAKN;;AACxB,AAACO,mDACA,gSAAA,2CAAA,3UAACC,mDAAI,CAAA,iFAA0C,mBAAA,nBAACb,iQACpCU","names":["playground.events/lynx-endpoint","re_frame.core.reg_event_db","cljs.core/deref","_","playground.db/db","re_frame.core.reg_event_fx","p__47747","p__47748","map__47749","cljs.core/--destructure-map","cljs.core.get","vec__47750","cljs.core.nth","map__47753","db","url","js/console.log","js/encodeURIComponent","cljs.core/assoc-in","ajax.core/text-response-format","p__47763","vec__47765","response","p__47770","vec__47772","request-type","js/console.error","playground.events/handler","js/console","cljs.core.js__GT_clj","ajax.core.GET"],"sourcesContent":["(ns playground.events\n  (:require\n   [ajax.core :as ajax :refer [GET POST]]\n   [day8.re-frame.http-fx]\n   [playground.db :refer [db]]\n   [re-frame.core :as rf]))\n\n(def lynx-endpoint \"http://localhost:8080\")\n\n(rf/reg-event-db\n :prod/inicialize-db\n ;; [(rf/inject-cofx :local-store-user)\n ;;  check-spec-interceptor]\n (fn [_ _]\n   @db))  ;; [{:keys [local-store-user]} _]\n   ;; {:db (assoc initial-app-db :auth local-store-user)}\n\n(rf/reg-event-fx\n :article/fetch-url\n (fn [{:keys [db]} [_ {:keys [url]}]]\n   (js/console.log \"fetching url: \" (str lynx-endpoint \"/free-riding/\" (js/encodeURIComponent url)))\n   {:db (assoc-in db [:article :url] url)\n    :http-xhrio {:method          :get\n                 :uri             (str lynx-endpoint \"/free-riding/\" (js/encodeURIComponent url))\n                 :timeout          8000\n                 :response-format (ajax/text-response-format)\n                 :on-success      [:article/set-text]\n                 :on-failure      [:error/endpoint-request :get-article]}}))\n\n(rf/reg-event-db\n :article/set-text\n (fn [db [_ response]]\n   (js/console.log \"response: \" response)\n   (assoc-in db [:article :text] response)))\n\n(rf/reg-event-db\n :error/endpoint-request\n (fn [db [_ request-type response]]\n   (js/console.error \"error: \" request-type \": \" response)\n   (-> db\n       (assoc-in [:errors request-type] (get response :status-text)))))\n\n(defn handler [response]\n  (.log js/console (str response)))\n(js->clj\n (GET (str \"http://localhost:8080/free-riding/\" (js/encodeURIComponent \"https://davidbacisin.com/writing/using-fasthttp-for-api-requests-golang\"))\n   {:handler handler}))\n;; :error-handler handler\n;; :response-format (ajax/json-response-format {:keywords? true})}))\n"]}